Tests
A number of tests will be run to set up the django application as a windows exe.

1. Basic python script
This will print a string to a file in the same directory as the script.
  a. Simply enter: (img) PS > python \path\to\pyinstaller.py --noconsole test.py
  b. executable is .\dist\test\test.exe

2. Basic django project
A stripped down version of the basic project provided by django. This will test the dynamic importing employed by Django.

3. Kivy python script to test window
A window will be displayed and features in Kivy tested.

4. Test the IMG project

Resources:
http://irwinkwan.com/tag/pyinstaller/
http://gamedev.stackexchange.com/questions/54037/solving-the-riddle-on-distributing-a-python-built-game

Steps:

http://pythonhosted.org/PyInstaller/#general-options

1. (img) PS > \path\to\pyinstaller\pyinstaller.py (--noconsole) (--onefile) (--distpath=\path\to\output) --name=<name> \path\to\manage.py

Basic Django app testing
1. Compile basic django poll app: SUCCESSFUL
2. Compile standard newdjango with a single standard startapp: SUCCESSFUL
  a. Have to import app explicitly from manage.py

3. Move app inside project folder and update path accordingly: SUCCESSFUL
  a. update manage.py: setdefault
  b. update INSTALLED_APPS: really_basic_django_command.testapp

4. Conclusion:

Rewrite project structure to match basic django app. It only has be in this form until the code is compiled.

5. Result:

Remove matplotlib
Remove references to apps. module
